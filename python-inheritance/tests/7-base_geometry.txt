doctest for 7-base_geometry.py
============================
This function prints a sorted list (ascending sort)

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

	>>> bg = BaseGeometry()

Test for success
================

	>>> bg.integer_validator("my_int", 12)

	>>> bg.integer_validator("width", 89)


================
Test for fail
================

>>> bg.integer_validator("baguette", (0, 1, 2))
Traceback (most recent call last):
TypeError: baguette must be an integer

>>> bg.integer_validator(None, None)
Traceback (most recent call last):
TypeError: None must be an integer

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0

>>> bg.integer_validator("distance", [2, 3])
Traceback (most recent call last):
TypeError: distance must be an integer

>>> bg.integer_validator("fromage", True)
Traceback (most recent call last):
TypeError: fromage must be an integer

>>> bg.integer_validator("distance", {2, 3})
Traceback (most recent call last):
TypeError: distance must be an integer

>>> bg.integer_validator("name")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'